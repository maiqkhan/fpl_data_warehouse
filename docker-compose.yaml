
services:
  fpl_database:
    image: postgres:16
    container_name: fpl_db    
    env_file: "fpl_db.env"
    ports:
      - "5433:5432"
    networks:
      - fpl_dagster_network
    volumes:
      - "./fpl_postgres_data:/var/lib/postgresql/data:rw"
      - "./health_check.sh:/usr/local/bin/health_check.sh"
      - "./init.sql:/docker-entrypoint-initdb.d/init.sql"
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/health_check.sh"]
      interval: 30s
      timeout: 8s
      retries: 5
      start_period: 10s  
  dagster_postgres:
    image: postgres:16
    container_name: dagster_postgresql
    environment:
      POSTGRES_USER: "postgres_user"
      POSTGRES_PASSWORD: "postgres_password"
      POSTGRES_DB: "postgres_db"
    networks:
      - fpl_dagster_network
    volumes:
      - "./health_check.sh:/usr/local/bin/health_check.sh"
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/health_check.sh"]
      interval: 30s
      timeout: 8s
      retries: 5
      start_period: 10s
  dagster_user_code:
    build:
      context: .
      dockerfile: ./Dockerfile_user_code
    container_name: dagster_user_code
    image: dagster_user_code_image
    user: root
    env_file: "fpl_db.env"
    restart: always
    ports:
      - 4000:4000 
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
      DAGSTER_CURRENT_IMAGE: "dagster_user_code_image"
    networks:
      - fpl_dagster_network
    volumes:
      - ./dbt_project:/opt/dagster/app/dbt_project
    healthcheck:
      test: ["CMD", "dagster", "api", "grpc-health-check", "-p", "4000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    depends_on:
      fpl_database:
        condition: service_healthy
  dagster_webserver:
    build:
      context: .
      dockerfile: ./Dockerfile_dagster
    container_name: dagster_webserver
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    expose:
      - "3000"
    ports:
      - 3000:3000    
    networks:
      - fpl_dagster_network
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
      - ./dbt_project:/opt/dagster/app/dbt_project
    depends_on:
      dagster_postgres:
        condition: service_healthy
      dagster_user_code:
        condition: service_healthy
  dagster_daemon:
    build:
      context: .
      dockerfile: ./Dockerfile_dagster
    container_name: dagster_daemon
    env_file: "fpl_db.env"
    entrypoint:
      - dagster-daemon
      - run
    restart: on-failure
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
      - ./dbt_project:/opt/dagster/app/dbt_project
    networks:
      - fpl_dagster_network
    depends_on:
      dagster_postgres:
        condition: service_healthy
      dagster_user_code:
        condition: service_healthy
        
networks:
  fpl_dagster_network:
    driver: bridge
    name: fpl_dagster_network